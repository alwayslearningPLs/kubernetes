---
- hosts: all
  become: yes
  become_user: root
  become_method: sudo
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    ansible.builtin.apt:
      state: present
      update_cache: yes
      name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - gnupg2
      - software-properties-common
      - git
      - wget
  - name: Import GPG from cloud google
    ansible.builtin.apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present
  - name: Add kubernetes repository
    ansible.builtin.apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list
  - name: Install kubernetes binaries
    ansible.builtin.apt:
      state: present
      update_cache: yes
      name:
      - kubelet
      - kubeadm
      - kubectl
  - name: Mark kubeadm, kubelet and kubectl so we are blocking updates and removes.
    ansible.builtin.dpkg_selections:
      name: "{{ item }}"
      selection: hold
    loop:
    - kubelet
    - kubeadm
    - kubectl
  - name: systemctl enable kubelet
    ansible.builtin.systemd:
      name: kubelet
      enabled: yes
      state: started
  - name: Disabling swap
    ansible.builtin.shell: swapoff -a
  - name: Remove swapfile from /etc/swapfile
    ansible.builtin.mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    loop:
      - swap
      - none
  - name: modprobe overlay and br_netfilter
    community.general.modprobe:
      name: "{{ item }}"
      state: present
    loop:
    - overlay
    - br_netfilter
  - name: Allowing IPv4 forwarding and traversing packets through iptables when ipv4 or ipv6
    ansible.posix.sysctl:
      name: "{{ item.key }}"
      value: "{{ item.val }}"
      sysctl_file: /etc/sysctl.d/kubernetes.conf
      reload: yes
    loop:
    - { key: 'net.bridge.bridge-nf-call-ip6tables', val: '1' }
    - { key: 'net.bridge.bridge-nf-call-iptables', val: '1' }
    - { key: 'net.ipv4.ip_forward', val: '1' }
  - name: Adding mandatory modules to containerd when booting
    ansible.builtin.lineinfile:
      path: /etc/modules-load.d/containerd.conf
      create: yes
      line: "{{ item }}"
    loop:
    - overlay
    - br_netfilter
  - name: Adding GPG key for docker (containerd)
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  - name: Adding repository for docker
    ansible.builtin.apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable
      state: present
  - name: Installing containerd.io
    ansible.builtin.apt:
      state: present
      name: containerd.io
      update_cache: yes
  - name: Generating containerd.io config file
    ansible.builtin.file:
      path: /etc/containerd/config.toml
      state: absent
  - name: Restarting containerd
    ansible.builtin.systemd:
      name: containerd
      enabled: yes
      state: restarted
  - name: Copy join command to local file
    ansible.builtin.copy:
      src: ./join_command
      dest: /tmp/join-command.sh
      mode: 0777
  - name: Join the admin cluster
    ansible.builtin.command: sh /tmp/join-command.sh

